source "$HOME/colorscheme/active/active-colorscheme.sh"

# #############################################################################
# Do not delete the `UNIQUE_ID` line below, I use it to backup original files
# so they're not lost when my symlinks are applied
# UNIQUE_ID=do_not_delete_this_line
# #############################################################################


# set the terminals
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -s set-clipboard external
set -as terminal-features ',tmux-256color:clipboard'
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape
set -g mouse on

# Reload config
bind r source-file ~/.config/tmux/tmux.conf \; \
display-message "Config Reloaded."

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# chetshit
bind-key -r i run-shell "tmux neww tmux-cht.sh"

# remove confirm step when killing a window or pane
bind-key & kill-window
# recomended by seah
bind-key x kill-pane
set-option -g detach-on-destroy off
bind -N "last-session (via sesh) " L run-shell "sesh last || tmux display-message -d 1000 'Oops, no last sessions found'"

# Reduce delay
set -s escape-time 1

#env
setenv -g SHOW_DIRECTORY_NAME 1

#statusbar
set -g status-position top

# Copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind y key in copy mode to select and copy to system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# Keyboard shortcut bindings
bind C-b last-window
bind C-h resize-pane -L 1
bind C-j resize-pane -D 1
bind C-k resize-pane -U 1
bind C-l resize-pane -R 1
bind C-n next-window
bind C-p previous-window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind a run-shell 'tmux popup -d "#{pane_current_path}" -xC -yC -w60% -h60% -E al'
bind-key s run-shell -b tmux-switch-pane.sh

# Sesh
# bind-key "S" run-shell "s"
bind-key "K" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:55%' \
    --preview 'sesh preview {}'
)\""

# bind-key "Z" display-popup -E "sesh connect \$(sesh list | zf --height 24)"

# Tokyonight 
set -g status-left-length 100

# Automatic rename
set-option -g automatic-rename-format '#{pane_current_command}'

set -g @tmux-nerd-font-window-name-shell-icon 'ÔÅî'
set -g @tmux-nerd-font-window-name-show-name false

# messages
set -g message-style "fg=$fg,bg=default,bold"

# FZF
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="ÔÇé   " --border-label=" Open URL "'
set -g @t-fzf-prompt 'ÓØà  '
set -g @t-bind 'T'
set -g @fzf-url-history-limit '2000'

# restore neovim sessions, used with tmux-resurrect
set -g @resurrect-strategy-nvim 'session'

# restore panes contents
set -g @resurrect-capture-pane-contents 'on'

# enable auto restore on reboot
set -g @continuum-restore 'off'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'joshmedeski/tmux-fzf-url'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Install `tpm` if needed.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Run tpm
run '~/.tmux/plugins/tpm/tpm'
