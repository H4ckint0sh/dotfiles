# catppuccin palette colors
bg="#2E3440"
bg_dark="#2E3440"
bg_highlight="#3B4252"
blue="#5E81AC"
comment="#616E88"
cyan="#88C0D0"
fg="#ECEFF4"
fg_dark="#a9b1d6"
fg_gutter="#E5E9F0"
green="#A3BE8C"
magenta="#B48EAD"
orange="#D08770"
purple="#B48EAD"
red="#BF616A"
teal="#1abc9c"
terminal_black="#2E3440"
yellow="#EBCB8B"


# set the terminals
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -s set-clipboard external
set -as terminal-features ',tmux-256color:clipboard'
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # this is for the cursor shape
set -g mouse on
set-option -g focus-events on

# Reload config
bind r source-file ~/.config/tmux/tmux.conf \; \
display-message "Config Reloaded."

set-window-option -g mode-keys vi
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# chetshit
bind-key -r i run-shell "tmux neww tmux-cht.sh"

# remove confirm step when killing a window or pane
bind-key & kill-window
# recomended by seah
bind-key x kill-pane
set-option -g detach-on-destroy off
bind -N "last-session (via sesh) " L run-shell "sesh last || tmux display-message -d 1000 'Oops, no last sessions found'"

# Reduce delay
set -s escape-time 1

#env
setenv -g SHOW_DIRECTORY_NAME 1
set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.tmux/plugins'


#statusbar
set -g status-position top

# Copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind y key in copy mode to select and copy to system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# navigate panes - ctrl[h,j,k,l]
is_vim_or_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$|fzf'"

bind -n C-h if-shell "$is_vim_or_fzf" 'send-keys C-h' 'select-pane -L'
bind -n C-j if-shell "$is_vim_or_fzf" 'send-keys C-j' 'select-pane -D'
bind -n C-k if-shell "$is_vim_or_fzf" 'send-keys C-k' 'select-pane -U'
bind -n C-l if-shell "$is_vim_or_fzf" 'send-keys C-l' 'select-pane -R'
bind -n C-q if-shell "$is_vim_or_fzf" 'send-keys C-q' 'kill-pane'

# Keyboard shortcut bindings
bind C-h resize-pane -L 1
bind C-j resize-pane -D 1
bind C-k resize-pane -U 1
bind C-l resize-pane -R 1
bind-key s run-shell -b tmux-switch-pane.sh

# Sesh
# bind-key "S" run-shell "s"
bind-key "K" run-shell "sesh connect \"$(
  sesh list --icons | fzf-tmux -p 80%,70% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:65%' \
    --preview 'sesh preview {}'
)\""

# bind-key "Z" display-popup -E "sesh connect \$(sesh list | zf --height 24)"

# Tokyonight 
set -g status-left-length 100
set -g status-left                  "#[fg=$blue,bold]#S"
set -ga status-left                 "#[fg=$fg]#(gitmux -cfg $HOME/gitmux.conf '#{pane_current_path}') "
set -g window-status-current-format "   #[fg=$fg]#I:#{pane_current_command}"
set -g window-status-format         "   #[fg=$comment]#I:#{pane_current_command}"
set -g status-style "bg=default,fg=$fg_dark" # transparent status bar
set -g status-position top

set -g mode-style "fg=$blue,bg=$fg_gutter"
set -g message-style "fg=$blue,bg=$fg_gutter"
set -g message-command-style "fg=$blue,bg=$fg_gutter"
set -g pane-border-style ""
set -g pane-active-border-style ""
set -g status-justify "left"
set -g status-style "fg=$blue,bg=$bg"
set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-style NONE
set -g status-right-style NONE

set -g status-left "#[fg=$green,bg=$bg,nobold]‚ñë‚ñí‚ñì#[fg=$bg,bg=$green]#S#[fg=$green,bg=$bg_highlight]ÓÇ¥#[bg=$bg_highlight]#(gitmux -cfg $HOME/gitmux.conf '#{pane_current_path}')#[fg=$bg_highlight,bg=$bg,nobold,nounderscore,noitalics]ÓÇ¥"
# set -g status-right "#[fg=$blue,bg=$bg]#{prefix_highlight}#[fg=$bg_highlight,bg=$bg,nobold,nounderscore,noitalics]ÓÇ∂#[fg=$blue,bg=$bg_highlight] #(~/.tmux/plugins/tmux-mem-cpu-load/tmux-mem-cpu-load --interval 2) "
set -g status-right ""

setw -g window-status-activity-style "underscore,fg=$fg_dark,bg=$bg_dark"
setw -g window-status-separator ""
setw -g window-status-style "NONE,fg=$fg_dark,bg=$bg_dark"
setw -g window-status-format "#[fg=$bg,bg=$bg_highlight,nobold,nounderscore,noitalics]ÓÇ¥#[bg=$bg_highlight,fg=$comment] #I #W #[fg=$bg_highlight,bg=$bg,nobold,nounderscore,noitalics]ÓÇ¥"
setw -g window-status-current-format "#[fg=$bg,bg=$fg,nobold,nounderscore,noitalics]ÓÇ¥#[fg=$bg,bg=$fg,nobold] #I #W #[fg=$fg,bg=$bg,nobold,nounderscore,noitalics]ÓÇ¥"

# tmux-plugins/tmux-prefix-highlight support
set -g @prefix_highlight_output_prefix "#[fg=$yellow]#[bg=$bg_dark]ÓÇ∂#[fg=$bg_dark]#[bg=$yellow]"
set -g @prefix_highlight_output_suffix "ÓÇ∂"

# Automatic rename
set-option -g automatic-rename-format '#{pane_current_command}'

# messages
set -g message-style "fg=$fg,bg=default,bold"

# FZF
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="ÔÇé   " --border-label=" Open URL "'
set -g @t-fzf-prompt 'ÓØà  '
set -g @t-bind 'T'
set -g @fzf-url-history-limit '2000'

# restore neovim sessions, used with tmux-resurrect
set -g @resurrect-strategy-nvim 'session'

# restore panes contents
set -g @resurrect-capture-pane-contents 'on'

# enable auto restore on reboot
set -g @continuum-restore 'off'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'joshmedeski/vim-tmux-navigator'
set -g @plugin 'joshmedeski/tmux-fzf-url'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Install `tpm` if needed.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Run tpm
run '~/.tmux/plugins/tpm/tpm'
