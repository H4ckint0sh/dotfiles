# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not neceesary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders has a built-in detection of already running process,
    # so it won't be run twice on AeroSpace restart
    'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar',
    'exec-and-forget open -a Wezterm & open -a Microsoft\ Teams & open -a Chromium',
    # 'exec-and-forget /opt/homebrew/opt/borders/bin/borders active_color="glow(0xd943ff64)" inactive_color=0x20494d64 width=8.0'
]

exec-on-workspace-change = ['/bin/bash', '-c',
    '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_change AEROSPACE_FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE AEROSPACE_PREV_WORKSPACE=$AEROSPACE_PREV_WORKSPACE'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20

# Possible values: tiles|accordion
default-root-container-layout = 'accordion'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'horizontal'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec]                   # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true  # If you don't touch "exec" section,
[exec.env-vars]          # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors

[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top = [
    {monitor."U32J59x" = 40},
    {monitor."DELL U2723QE" = 40},
    5
]
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-space = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-c = 'workspace C'
alt-x = 'workspace X'
alt-b = 'workspace B'
alt-t = 'workspace T'
alt-d = 'workspace D'
alt-m = 'workspace M'
alt-y = 'workspace Y'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-c = ['move-node-to-workspace C', 'workspace C']
alt-shift-x = ['move-node-to-workspace X', 'workspace X']
alt-shift-b = ['move-node-to-workspace B', 'workspace B']
alt-shift-t = ['move-node-to-workspace T', 'workspace T']
alt-shift-d = ['move-node-to-workspace D', 'workspace D']
alt-shift-m = ['move-node-to-workspace M', 'workspace M']
alt-shift-y = ['move-node-to-workspace Y', 'workspace Y']

alt-shift-f = 'fullscreen'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-space = 'mode service'

alt-shift-r = 'mode resize'

[mode.resize.binding]
h = 'resize width -50'
j = 'resize height +50'
k = 'resize height -50'
l = 'resize width +50'
b = 'balance-sizes'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -50'
equal = 'resize smart +50'

enter = 'mode main'
esc = 'mode main'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

alt-shift-r = ['exec-and-forget /opt/homebrew/bin/sketchybar --reload']


[workspace-to-monitor-force-assignment]
C = ['Built-in Retina Display'] 
X = ['Built-in Retina Display'] 
B = ['U32J59x', 'DELL U2723QE \(2\)', 'Built-in Retina Display'] 
T = ['U32J59x', 'DELL U2723QE \(1\)', 'Built-in Retina Display'] 
D = ['U32J59x', 'DELL U2723QE \(1\)', 'Built-in Retina Display'] 
M = ['U32J59x', 'DELL U2723QE \(2\)', 'Built-in Retina Display'] 
Y = ['U32J59x', 'DELL U2723QE \(1\)', 'Built-in Retina Display'] 

# Send apps to certain workspace
[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = 'move-node-to-workspace C' 

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = 'move-node-to-workspace M' 

[[on-window-detected]]
if.app-id = 'com.microsoft.outlook'
run = 'move-node-to-workspace M' 

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = 'move-node-to-workspace T' 

[[on-window-detected]]
if.app-id = 'org.chromium.Chromium'
run = 'move-node-to-workspace B' 

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = "move-node-to-workspace D"

# Exclude apps
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.m0k.transmission'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.cockos.LICEcap'
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = 'layout floating'
