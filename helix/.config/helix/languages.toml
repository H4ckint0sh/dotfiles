 [[language]]
 name = "typescript"
 scope = "source.ts"
 injection-regex = "(ts|typescript)"
 file-types = ["ts", "mts", "cts"]
 language-id = "typescript"
 shebangs = []
 roots = []
 language-servers = [  "typescript-language-server", "tailwindcss-react", "eslint"]
 formatter = { command = 'prettier', args = ["--stdio"] }
 indent = { tab-width = 4, unit = "\t" }
 auto-format = true


 [[language]]
 name = "tsx"
 scope = "source.tsx"
 injection-regex = "(tsx)" # |typescript
 language-id = "typescriptreact"
 file-types = ["tsx"]
 roots = []
 language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint"]
 formatter = { command = 'prettier', args = ["--stdin-filepath", "file.tsx"] }
 indent = { tab-width = 4, unit = "\t" }
 auto-format = true

 [[language]]
 name = "jsx"
 scope = "source.jsx"
 injection-regex = "jsx"
 language-id = "javascriptreact"
 file-types = ["jsx"]
 roots = []
 comment-token = "//"
 language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint"]
 grammar = "javascript"
 formatter = { command = 'prettier', args = ["--stdin-filepath", "file.jsx"] }
 indent = { tab-width = 4, unit = "\t" }
 auto-format = true

 [[language]]
 name = "javascript"
 scope = "source.js"
 injection-regex = "(js|javascript)"
 language-id = "javascript"
 file-types = ["js", "mjs", "cjs"]
 shebangs = ["node"]
 roots = []
 comment-token = "//"
 language-servers = [ "typescript-language-server", "tailwindcss-react", "eslint"]
 formatter = { command = 'prettier', args = ["--stdio"] }
 indent = { tab-width = 4, unit = "\t" }
 auto-format = true

 [[language]]
 name = "json"
 scope = "source.json"
 injection-regex = "json"
 file-types = ["json", "jsonc", "arb", "ipynb", "geojson"]
 roots = []
 language-servers = [ "vscode-json-language-server" ]
 formatter = { command = 'prettier', args = ["--stdio"] }
 indent = { tab-width = 4, unit = "\t" }
 auto-format = true

 [language-server.eslint]
 args = ["--stdio"]
 command = "vscode-eslint-language-server"

 [language-server.eslint.config]
 format = true
 nodePath = ""
 onIgnoredFiles = "off"
 packageManager = "npm"
 quiet = false
 rulesCustomizations = []
 run = "onType"
 useESLintClass = false
 validate = "on"
 codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
 codeActionOnSave = { mode = "all" }
 experimental = { }
 problems = { shortenToSingleLine = false }
 workingDirectory = { mode = "auto" }

 [language-server.tailwindcss-react]
 language-id = "typescriptreact"
 command = "hx-tw"
 config = { }
 args = ["--stdio"]
 timeout = 3

 [language-server.typescript-language-server.config]
 documentFormatting = false
