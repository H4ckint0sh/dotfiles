#!/usr/bin/env bun
// @bun
var it=Object.defineProperty;var at=(t,e)=>{for(var n in e)it(t,n,{get:e[n],enumerable:!0,configurable:!0,set:(o)=>e[n]=()=>o})};import lt from"events";import{parseArgs as ct} from"util";var k={openai:"Continue the input code from the language <languageId>. Only respond with code.",copilot:"<languageId> completions. Only respond with code.",ollama:"Continue the input code from the language <languageId>. Only respond with code."};var E=[{key:"resolveDiagnostics",label:"Resolve diagnostics",query:"Resolve the diagnostics for this code."},{key:"generateDocs",label:"Generate documentation",query:"Add documentation to this code."},{key:"improveCode",label:"Improve code",query:"Improve this code."},{key:"refactorFromComment",label:"Refactor code from a comment",query:"Refactor this code based on the comment."},{key:"writeTest",label:"Write a unit test",query:"Write a unit test for this code. Do not include any imports."}];var{values:h}=ct({args:Bun.argv,options:{logFile:{type:"string",default:Bun.env.LOG_FILE??""},handler:{type:"string",default:Bun.env.HANDLER??"openai"},debounce:{type:"string",default:Bun.env.DEBOUNCE??"400"},triggerCharacters:{type:"string",default:Bun.env.TRIGGER_CHARACTERS??"{||(|| "},openaiKey:{type:"string",default:Bun.env.OPENAI_API_KEY},openaiContext:{type:"string",default:Bun.env.OPENAI_CONTEXT?.length?Bun.env.OPENAI_CONTEXT:k.openai},openaiModel:{type:"string",default:Bun.env.OPENAI_MODEL??"gpt-3.5-turbo-16k"},openaiMaxTokens:{type:"string",default:Bun.env.OPENAI_MAX_TOKENS??"7000"},openaiEndpoint:{type:"string",default:Bun.env.OPENAI_ENDPOINT??"https://api.openai.com/v1"},copilotEndpoint:{type:"string",default:Bun.env.GITHUB_ENDPOINT??"https://api.githubcopilot.com"},copilotContext:{type:"string",default:Bun.env.COPILOT_CONTEXT?.length?Bun.env.COPILOT_CONTEXT:k.copilot},copilotModel:{type:"string",default:Bun.env.COPILOT_MODEL??"gpt-3.5-turbo"},copilotApiKey:{type:"string",default:Bun.env.COPILOT_API_KEY},authCopilot:{type:"boolean",default:!1},authCodeium:{type:"boolean",default:!1},codeiumApiKey:{type:"string",default:Bun.env.CODEIUM_API_KEY??"d49954eb-cfba-4992-980f-d8fb37f0e942"},fetchTimeout:{type:"string",default:Bun.env.FETCH_TIMEOUT??"10000"},actionTimeout:{type:"string",default:Bun.env.ACTION_TIMEOUT??"10000"},completionTimeout:{type:"string",default:Bun.env.COMPLETION_TIMEOUT??"10000"},ollamaEndpoint:{type:"string",default:Bun.env.OLLAMA_ENDPOINT??"http://127.0.0.1:11434"},ollamaModel:{type:"string",default:Bun.env.OLLAMA_MODEL??"codellama"},ollamaContext:{type:"string",default:Bun.env.OLLAMA_CONTEXT?.length?Bun.env.OLLAMA_CONTEXT:k.ollama},ollamaTimeout:{type:"string",default:Bun.env.OLLAMA_TIMEOUT??"60000"}},strict:!0,allowPositionals:!0});if(!Bun.env.TEST_RUNNER?.length&&!h.openaiKey?.length&&!h.copilotApiKey?.length&&!h.authCopilot&&!h.authCodeium&&h.handler!=="codeium"&&h.handler!=="ollama")throw new Error("no handler key provided");var i={...h,triggerCharacters:h.triggerCharacters.split("||"),debounce:parseInt(h.debounce),fetchTimeout:parseInt(h.fetchTimeout),actionTimeout:parseInt(h.actionTimeout),completionTimeout:parseInt(h.completionTimeout)};import mt from"crypto";import pt from"fs";var G={},Q=(t,e,n)=>{if(G[t])clearTimeout(G[t]);G[t]=setTimeout(e,n)},W=(t)=>{const e=new URLSearchParams(t);return Object.fromEntries(e.entries())},m=(t)=>{return mt.randomBytes(t/2).toString("hex")},q=()=>{return m(8)+"-"+m(4)+"-"+m(4)+"-"+m(4)+"-"+m(12)},z=async(t,e,n)=>{const o=t?.split("\n").slice(0,e+1);o[o.length-1]=o[o.length-1].split("").slice(0,n).join("");const r=o[o.length-1],s=o.join("\n"),c=t?.split("\n").slice(e+1).join("\n"),l=s.slice(-1),g=t?.split("\n")[e].slice(n);return{contentBefore:s,contentAfter:c,lastCharacter:l,lastLine:r,contentImmediatelyAfter:g}},M,a=(...t)=>{if(!i.logFile)return;if(Bun.env.TEST_RUNNER)console.log(K(...t));else if(i.logFile?.length){if(!M)M=pt.createWriteStream(i.logFile);try{M.write(K(...t)+"\n\n")}catch(e){}}},K=(...t)=>{let e=[];return t.forEach((n)=>{e.push(n),e.push("|")}),e=e.slice(0,e.length-1),["APP",(new Date()).toISOString(),"-->",...e].join(" ")},w=(t)=>{return Array.from(new Set(t))},X=(t)=>{if(!t?.length)return{};const e={},n=t.split(";");for(let o of n){const[r,s]=o.split("=");e[r]=s}return e},Z=()=>{return Math.floor(Date.now()/1000)},v=(t,e,n)=>{const o=new RegExp(`\`\`\`${n}([\\s\\S]*?)\`\`\``,"g");let r;const s=[];while((r=o.exec(e))!==null)s.push(r[0]);const c=s[0];if(!c?.length)return;const l=c?.replace(`// FILEPATH: ${t.replace("file://","")}\n`,"")?.split("\n");return l?.slice(1,l.length-1)?.join("\n")+"\n"};var T;((p)=>{p.DidOpen="textDocument/didOpen";p.DidChange="textDocument/didChange";p.Completion="textDocument/completion";p.CodeAction="textDocument/codeAction";p.ApplyEdit="workspace/applyEdit";p.ExecuteCommand="workspace/executeCommand";p.Initialize="initialize";p.Shutdown="shutdown";p.Exit="exit";p.PublishDiagnostics="textDocument/publishDiagnostics"})(T||={});var A;((r)=>{r[r.Error=1]="Error";r[r.Warning=2]="Warning";r[r.Information=3]="Information";r[r.Hint=4]="Hint"})(A||={});class tt{emitter;capabilities;currentUri;buffers;constructor({capabilities:t}){this.emitter=new lt({captureRejections:!0}),this.capabilities=t,this.buffers={},a("triggerCharacters:",JSON.stringify(t?.completionProvider?.triggerCharacters)),this.registerDefault()}registerDefault(){this.emitter.on("error",(t)=>{a("lsp-event-emitter error",t.message)}),this.on("initialize",async({ctx:t,request:e})=>{t.send({id:e.id,result:{capabilities:this.capabilities}})}),this.on("textDocument/didOpen",({ctx:t,request:e})=>{const{uri:n,text:o,languageId:r}=e.params.textDocument;this.buffers[n]={uri:n,text:o,languageId:r,version:0},this.currentUri=n,a("received didOpen",`language: ${r}`)}),this.on("shutdown",()=>{a("received shutdown request"),process.exit(0)}),this.on("textDocument/didChange",async({ctx:t,request:e})=>{const{uri:n,version:o}=e.params.textDocument;this.buffers[n]={...this.buffers[n],version:o,text:e.params.contentChanges[0].text},this.currentUri=n,a("received didChange",`language: ${this.buffers[n].languageId}`,`contentVersion: ${o}`,`uri: ${n}`)})}getContentPadding(t){return t.split("\n").reduce((o,r)=>{if(r.trim().length===0)return o;const c=r.match(/^\s+/)?.[0].length||0;return Math.min(c,o)},99999)}padContent(t,e){return t.split("\n").map((n)=>{if(n.trim().length===0)return n;return" ".repeat(e)+n}).join("\n")}registerEventHandlers(t){Object.values(t).forEach((e)=>{e(this)})}getContentFromRange(t){a("getting content from range",JSON.stringify(t),`uri: ${this.currentUri}`,`current buffers: ${JSON.stringify(Object.keys(this.buffers))}`);const{start:e,end:n}=t;return this.buffers[this.currentUri]?.text?.split("\n")?.slice(e.line,n.line).join("\n")}positionalUpdate(t,e,n){const r=this.buffers[t]?.text?.split("\n"),s=n.start.line,c=n.end.line,l=r[s],g=r[c],x=l?.substring(0,n.start.character),p=g?.substring(n.end.character),d=[x+e+p],j=r.reduce((u,b,C)=>{if(C<s||C>c)u.push(b);else if(C===s)u.push(d[0]);return u},[]);this.buffers[t].text=j.join("\n")}on(t,e){this.emitter.on(t,async(n)=>{try{await e({ctx:this,request:n})}catch(o){a("error in event",JSON.stringify(n),o.message)}})}send({method:t,id:e,result:n,params:o}){const r=JSON.stringify({jsonrpc:"2.0",method:t,id:e,result:n,params:o}),s=(new TextEncoder()).encode(r).length;process.stdout.write(`Content-Length: ${s}\r\n\r\n${r}`),a("sent request",r)}sendDiagnostics(t,e=0){a("sending diagnostics",JSON.stringify(t));const n={uri:this.currentUri,diagnostics:t.map((o)=>{return o.source="helix-gpt",o})};if(this.send({method:"textDocument/publishDiagnostics",params:n}),e>0)setTimeout(()=>{this.send({method:"textDocument/publishDiagnostics",params:{uri:this.currentUri,diagnostics:[]}})},e)}resetDiagnostics(){this.send({method:"textDocument/publishDiagnostics",params:{uri:this.currentUri,diagnostics:[]}})}parseLine(t){const e=t.split("\r\n");for(let n of e)try{return JSON.parse(n)}catch(o){}throw new Error("failed to parse")}async receiveLine(t){try{const e=this.parseLine(t);if(!["textDocument/didChange","textDocument/didOpen"].includes(e.method))a("received request:",JSON.stringify(e));this.emitter.emit(e.method,e)}catch(e){a("failed to parse line:",e.message,t)}}async start(){for await(let t of Bun.stdin.stream()){const e=Buffer.from(t).toString();this.receiveLine(e)}}}var et={Service:tt,Event:T,DiagnosticSeverity:A};var V={};at(V,{completions:()=>ft,actions:()=>ht});var J={},dt=(t,e)=>{J[t]=e},nt=(t)=>{if(!J[i.handler]){const e=`no provider: ${i.handler}`;throw a(e),new Error(e)}return J[i.handler]},ut=async(...t)=>{a(i.handler,"chat request",JSON.stringify(t));const e=nt(i.handler);if(!e.chat){const n=`No chat provider for: ${i.handler}`;throw a(n),new Error(n)}return e.chat(...t)},gt=async(...t)=>{a(i.handler,"completion request");const e=nt(i.handler);if(!e.completion){const n=`No completion provider for: ${i.handler}`;throw a(n),new Error(n)}return e.completion(...t)},y={chat:ut,completion:gt,registerProvider:dt};var ht=(t)=>{t.on("workspace/executeCommand",async({ctx:e,request:n})=>{const{command:o}=n.params,{diagnostics:r,range:s}=n.params.arguments[0];let{query:c}=n.params.arguments[0];e.sendDiagnostics([{message:`Executing ${o}...`,range:s,severity:3}],i.actionTimeout);const l=e.getContentFromRange(s),g=e.getContentPadding(l),x=e.buffers[e.currentUri];if(a("chat request content:",l),r?.length)c+="\n\nDiagnostics: "+r.join("\n- ");try{var{result:p}=await y.chat(c,l,e.currentUri,x?.languageId);if(!p?.length)throw new Error("No completion found")}catch(d){return a("chat failed",d.message),e.sendDiagnostics([{message:d.message,severity:1,range:s}],i.actionTimeout)}p=e.padContent(p.trim(),g)+"\n",a("received chat result:",p),e.send({method:"workspace/applyEdit",id:n.id,params:{label:o,edit:{changes:{[e.currentUri]:[{range:s,newText:p}]}}}}),e.resetDiagnostics()}),t.on("textDocument/codeAction",({ctx:e,request:n})=>{e.currentUri=n.params.textDocument.uri,e.send({id:n.id,result:E.map((o)=>({title:o.label,kind:"quickfix",diagnostics:[],command:{title:o.label,command:o.key,arguments:[{range:n.params.range,query:o.query,diagnostics:n.params.context?.diagnostics?.map((r)=>r.message)}]}}))})})};var ft=(t)=>{t.on("textDocument/completion",async({ctx:n,request:o})=>{const r=n.buffers[o.params.textDocument.uri],s=r.version,{lastCharacter:c}=await z(r.text,o.params.position.line,o.params.position.character);if(c==".")return n.send({id:o.id,result:{isIncomplete:!1,items:[]}});Q("completion",async()=>{try{await e({ctx:n,request:o,lastContentVersion:s})}catch(l){a("error in completion event",l.message),n.sendDiagnostics([{message:l.message,severity:1,range:{start:{line:o.params.position.line,character:0},end:{line:o.params.position.line+1,character:0}}}],i.completionTimeout)}},i.debounce)});const e=async({ctx:n,request:o,lastContentVersion:r})=>{const s=()=>{n.resetDiagnostics(),n.send({id:o.id,result:{isIncomplete:!1,items:[]}})},c=n.buffers[o.params.textDocument.uri];if(a("running completion on buffer",JSON.stringify(c)),c.version>r)return a("skipping because content is stale"),s();const{lastLine:l,contentBefore:g,contentAfter:x,contentImmediatelyAfter:p}=await z(c.text,o.params.position.line,o.params.position.character);a("calling completion event"),n.sendDiagnostics([{message:"Fetching completion...",severity:3,range:{start:{line:o.params.position.line,character:0},end:{line:o.params.position.line+1,character:0}}}],i.completionTimeout);try{var d=await y.completion({contentBefore:g,contentAfter:x},n.currentUri,c?.languageId)}catch(u){return n.sendDiagnostics([{message:u.message,severity:1,range:{start:{line:o.params.position.line,character:0},end:{line:o.params.position.line+1,character:0}}}],i.completionTimeout)}a("completion hints:",d);const j=d?.map((u)=>{if(u=u.trim(),u.startsWith(l.trim()))u=u.slice(l.trim().length).trim();const b=u.split("\n"),C=o.params.position.line+b.length-1;let H=b.slice(-1)[0].length;if(C==o.params.position.line)H+=o.params.position.character;return{label:b[0].length>20?b[0]:u.slice(0,20).trim(),kind:1,preselect:!0,detail:u,insertText:u,insertTextFormat:1,additionalTextEdits:[{newText:"",range:{start:{line:C,character:H},end:{line:C,character:H+p?.length}}}]}});n.send({id:o.id,result:{isIncomplete:!1,items:j}}),n.resetDiagnostics()}};class f{url;headers;params;controller;constructor({url:t,headers:e,params:n}){this.url=t,this.headers=e||{},this.params=n||{},this.controller=new AbortController}async fetch(t,e,n=i.fetchTimeout){return new Promise(async(o,r)=>{setTimeout(()=>{this.controller.abort(),r(new Error("timeout"))},n);try{const s=await fetch(t,e);o(s)}catch(s){if(s.name==="AbortError")r({message:""});r(s)}})}async request(t){const{endpoint:e,method:n,body:o,headers:r,params:s,url:c,timeout:l}=t;let g=new URL(e,c||this.url);if(a("fetch",e),s)Object.keys(s).forEach((d)=>g.searchParams.append(d,s[d]));Object.keys(this.params).forEach((d)=>{g.searchParams.append(d,this.params[d])}),this.controller.abort(),this.controller=new AbortController;let x={headers:{...this.headers,...r},method:n,body:null,signal:this.controller.signal};if(o)x.body=JSON.stringify(o);const p=await this.fetch(g.toString(),x,l);if(!p.ok){let d=await p.text();throw new Error(`Fetch failed with status ${p.status} body ${d} url: ${t.endpoint}`)}if(a("response",g,p.status),t.text)return await p.text();return await p.json()}}class I{deviceCode;userCode;verificationUri;expiresIn;interval;message;constructor(t){this.deviceCode=t.device_code,this.userCode=t.user_code,this.verificationUri=t.verification_uri,this.expiresIn=t.expires_in,this.interval=t.interval,this.message=t.message}static fromResponse(t){const e=W(t);return new I(e)}}class R{accessToken;tokenType;scope;constructor(t){this.accessToken=t.access_token,this.tokenType=t.token_type,this.scope=t.scope}static fromResponse(t){const e=W(t);return new R(e)}}class ${exp;raw;constructor(t){this.exp=t.exp,this.raw=t.raw}static fromResponse(t){const e=X(t?.token);return new $({exp:parseInt(e.exp),raw:t?.token})}}class O extends Array{constructor(...t){super();this.push(...w(t))}static fromResponse(t){const e=t.split("\n").map((o)=>o.slice(5)).map((o)=>{try{return JSON.parse(o).choices[0]}catch(r){return null}}).filter((o)=>o).reduce(function(o,r){return o[r.index]=o[r.index]||[],o[r.index].push(r),o},Object.create(null)),n=Object.values(e).map((o)=>o.map((r)=>r.text).join(""));return new O(...n)}}class D{result;constructor(t){this.result=t}static fromResponse(t,e,n){const o=t?.choices?.map((s)=>s.message?.content),r=v(e,o[0],n);return new D(r)}}class S extends f{copilotSession;constructor(){super({url:"https://github.com",headers:{"Content-Type":"application/json"}})}async deviceCode(){const t=await this.request({method:"POST",endpoint:"/login/device/code",text:!0,params:{scope:"read:user",client_id:"Iv1.b507a08c87ecfe98"}});return I.fromResponse(t)}async accessToken(t){const e=await this.request({method:"POST",endpoint:"/login/oauth/access_token",text:!0,params:{client_id:"Iv1.b507a08c87ecfe98",device_code:t,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}});return R.fromResponse(e)}async refreshCopilotSession(){if(this.copilotSession?.exp&&this.copilotSession?.exp>=Z())return;const t=await this.request({method:"GET",url:"https://api.github.com",endpoint:"/copilot_internal/v2/token",headers:{Authorization:`Bearer ${i.copilotApiKey}`}});this.copilotSession=$.fromResponse(t)}async chat(t,e,n,o){await this.refreshCopilotSession();const s={intent:!0,max_tokens:7909,model:"gpt-4",n:1,stream:!1,temperature:0.1,top_p:1,messages:[{content:`You are an AI programming assistant.\nWhen asked for your name, you must respond with \"GitHub Copilot\".\nFollow the user's requirements carefully & to the letter.\n- Each code block starts with \`\`\` and // FILEPATH.\n- You always answer with ${o} code.\n- When the user asks you to document something, you must answer in the form of a ${o} code block.\nYour expertise is strictly limited to software development topics.\nFor questions not related to software development, simply give a reminder that you are an AI programming assistant.\nKeep your answers short and impersonal.`,role:"system"},{content:`I have the following code in the selection:\n\`\`\`${o}\n// FILEPATH: ${n.replace("file://","")}\n${e}`,role:"user"},{content:t,role:"user"}]},c={"Content-Type":"application/json; charset=utf-8","User-Agent":"GitHubCopilotChat/0.8.0",Authorization:`Bearer ${this.copilotSession?.raw}`,"Editor-Plugin-Version":"copilot-chat/0.8.0","Editor-Version":"vscode/1.83.1","Openai-Intent":"conversation-panel","Openai-Organization":"github-copilot","VScode-MachineId":m(64),"VScode-SessionId":m(8)+"-"+m(4)+"-"+m(4)+"-"+m(4)+"-"+m(25),"X-Request-Id":m(8)+"-"+m(4)+"-"+m(4)+"-"+m(4)+"-"+m(12),"Accept-Encoding":"gzip,deflate,br",Accept:"*/*",Connection:"close"},l=await this.request({method:"POST",body:s,headers:c,url:"https://api.githubcopilot.com",endpoint:"/chat/completions"});return D.fromResponse(l,n,o)}async completion(t,e,n,o=3){await this.refreshCopilotSession();const r={"Content-Type":"application/json; charset=utf-8","User-Agent":"GithubCopilot/1.155.0",Authorization:`Bearer ${this.copilotSession?.raw}`,"Editor-Plugin-Version":"copilot/1.155.0","Editor-Version":"vscode/1.85.1","Openai-Intent":"copilot-ghost","Openai-Organization":"github-copilot","VScode-MachineId":m(64),"VScode-SessionId":m(8)+"-"+m(4)+"-"+m(4)+"-"+m(4)+"-"+m(25),"X-Request-Id":m(8)+"-"+m(4)+"-"+m(4)+"-"+m(4)+"-"+m(12),"Accept-Encoding":"gzip,deflate,br",Accept:"*/*"},s={extra:{language:n,next_indent:0,prompt_tokens:500,suffix_tokens:400,trim_by_indentation:!0},max_tokens:500,n:o,nwo:"app",prompt:`// Path: ${e.replace("file://","")}\n${t.contentBefore}`,stop:["\n\n"],stream:!0,suffix:t.contentAfter,temperature:o>1?0.4:0,top_p:1},c=await this.request({method:"POST",body:s,headers:r,text:!0,url:"https://copilot-proxy.githubusercontent.com",endpoint:"/v1/engines/copilot-codex/completions"});return O.fromResponse(c)}}var ot=async()=>{const t=new S,e=await t.deviceCode();console.log(`Visit: ${e.verificationUri} in your browser and enter: ${e.userCode}`);while(!0){await new Promise((o)=>setTimeout(o,5000));const n=await t.accessToken(e.deviceCode);if(n?.accessToken?.length){console.log("\n\nGot token:",n.accessToken,"\n\n","Store this in the COPILOT_API_KEY environment variable");break}console.log("Waiting for user authorization...")}};class Y extends Array{constructor(...t){super();this.push(...w(t))}static fromResponse(t){return t.completionItems?.map((e)=>e.completion.text)}}var wt={unspecified:0,c:1,clojure:2,coffeescript:3,cpp:4,csharp:5,css:6,cudacpp:7,dockerfile:8,go:9,groovy:10,handlebars:11,haskell:12,hcl:13,html:14,ini:15,java:16,javascript:17,json:18,julia:19,kotlin:20,latex:21,less:22,lua:23,makefile:24,markdown:25,objectivec:26,objectivecpp:27,perl:28,php:29,plaintext:30,protobuf:31,pbtxt:32,python:33,r:34,ruby:35,rust:36,sass:37,scala:38,scss:39,shell:40,sql:41,starlark:42,swift:43,tsx:44,typescript:45,visualbasic:46,vue:47,xml:48,xsl:49,yaml:50,svelte:51,toml:52,dart:53,rst:54,ocaml:55,cmake:56,pascal:57,elixir:58,fsharp:59,lisp:60,matlab:61,powershell:62,solidity:63,ada:64,ocaml_interface:65};class P extends f{sessionId;apiKey;constructor(t=i.codeiumApiKey){super({url:"https://web-backend.codeium.com",headers:{"Content-Type":"application/json"}});this.sessionId=q(),this.apiKey=t}authUrl(){return`https://codeium.com/profile?response_type=token&redirect_uri=vim-show-auth-token&state=${this.sessionId}&scope=openid%20profile%20email&redirect_parameters_type=query`}async register(t){const e={"Content-Type":"application/json"},n={firebase_id_token:t};return(await this.request({method:"POST",headers:e,url:"https://api.codeium.com",endpoint:"/register_user/",body:n}))?.api_key}async completion(t,e,n,o=3){const r={"Content-Type":"application/json",Authorization:`Basic ${this.apiKey}-${this.sessionId}`};e=e.replace("file://","");const s={metadata:{ideName:"web",ideVersion:"unknown",extensionVersion:"1.6.13",extensionName:"helix-gpt",apiKey:this.apiKey,sessionId:this.sessionId},document:{editor_language:n,language:wt[n],cursor_offset:t.contentBefore.length,line_ending:"\n",absolute_path:e,relative_path:e,text:t.contentBefore+"\n"+ +t.contentAfter},editor_options:{tab_size:2,insert_spaces:!0},other_documents:[]},c=await this.request({method:"POST",body:s,headers:r,endpoint:"/exa.language_server_pb.LanguageServerService/GetCompletions"});return Y.fromResponse(c).slice(0,o)}}var rt=async()=>{const t=new P,e=t.authUrl();console.log(`Visit the following URL and enter the token below: ${e}`);const n=prompt("Token: "),o=await t.register(n?.trim());console.log(`\nCodeium API key: ${o}`)};class _ extends Array{constructor(...t){super();this.push(...w(t))}static fromResponse(t){const e=t?.choices?.map((n)=>n.message.content);return new _(...e)}}class B{result;constructor(t){this.result=t}static fromResponse(t,e,n){const o=t?.choices?.map((s)=>s.message?.content),r=v(e,o[0],n);return new B(r)}}class L extends f{constructor(){super({url:i.openaiEndpoint,headers:{"Content-Type":"application/json",Authorization:`Bearer ${i.openaiKey}`}})}async chat(t,e,n,o){const s={max_tokens:7909,model:"gpt-4",n:1,stream:!1,temperature:0.1,top_p:1,messages:[{content:`You are an AI programming assistant.\nWhen asked for your name, you must respond with \"GitHub Copilot\".\nFollow the user's requirements carefully & to the letter.\n- Each code block starts with \`\`\` and // FILEPATH.\n- You always answer with ${o} code.\n- When the user asks you to document something, you must answer in the form of a ${o} code block.\nYour expertise is strictly limited to software development topics.\nFor questions not related to software development, simply give a reminder that you are an AI programming assistant.\nKeep your answers short and impersonal.`,role:"system"},{content:`I have the following code in the selection:\n\`\`\`${o}\n// FILEPATH: ${n.replace("file://","")}\n${e}`,role:"user"},{content:t,role:"user"}]},c=await this.request({method:"POST",body:s,endpoint:"/v1/chat/completions",timeout:1e4});return B.fromResponse(c,n,o)}async completion(t,e,n,o=3){const r=[{role:"system",content:i.openaiContext?.replace("<languageId>",n)+`\n\nEnd of file context:\n\n${t.contentAfter}`},{role:"user",content:`Start of file context:\n\n${t.contentBefore}`}],s={model:i.openaiModel,max_tokens:parseInt(i.openaiMaxTokens),n:o,temperature:o>1?0.4:0,top_p:1,frequency_penalty:1,presence_penalty:2,messages:r},c=await this.request({method:"POST",body:s,endpoint:"/v1/chat/completions"});return _.fromResponse(c)}}class F extends Array{constructor(...t){super();this.push(...w(t))}static fromResponse(t){return new F(t.message.content)}}class U{result;constructor(t){this.result=t}static fromResponse(t,e,n){const o=t.message.content,r=v(e,o,n);return new U(r)}}class N extends f{timeout;model;constructor(){super({url:i.ollamaEndpoint,headers:{"Content-Type":"application/json"}});this.timeout=parseInt(i.ollamaTimeout,10),this.model=i.ollamaModel}async chat(t,e,n,o){const r=[{content:`You are an AI programming assistant.\nWhen asked for your name, you must respond with \"GitHub Copilot\".\nFollow the user's requirements carefully & to the letter.\n- Each code block starts with \`\`\` and // FILEPATH.\n- You always answer with ${o} code.\n- When the user asks you to document something, you must answer in the form of a ${o} code block.\nYour expertise is strictly limited to software development topics.\nFor questions not related to software development, simply give a reminder that you are an AI programming assistant.\nKeep your answers short and impersonal.`,role:"system"},{content:`I have the following code in the selection:\n\`\`\`${o}\n// FILEPATH: ${n.replace("file://","")}\n${e}`,role:"user"},{content:t,role:"user"}];a("prompt",r.map((l)=>`role: ${l.role}\n${l.content}`).join("\n"));const s={model:this.model,stream:!1,messages:r},c=await this.request({method:"POST",body:s,endpoint:"/api/chat",timeout:this.timeout});return a("content",c.message.content),U.fromResponse(c,n,o)}async completion(t,e,n,o=3){const r=[{role:"system",content:i.ollamaContext?.replace("<languageId>",n)+`\n\nEnd of file context:\n\n${t.contentAfter}`},{role:"user",content:`Start of file context:\n\n${t.contentBefore}`}];a("prompt",r.map((l)=>`role: ${l.role}\n${l.content}`).join("\n"));const s={model:this.model,stream:!1,messages:r},c=await this.request({method:"POST",body:s,endpoint:"/api/chat",timeout:this.timeout});return a("content",c.message.content),F.fromResponse(c)}}if(i.authCopilot)await ot(),process.exit(0);if(i.authCodeium)await rt(),process.exit(0);y.registerProvider("copilot",new S);y.registerProvider("openai",new L);y.registerProvider("codeium",new P);y.registerProvider("ollama",new N);var st=new et.Service({capabilities:{codeActionProvider:!0,executeCommandProvider:{commands:E.map((t)=>t.key)},completionProvider:{resolveProvider:!1,triggerCharacters:i.triggerCharacters},textDocumentSync:{change:1,openClose:!0}}});st.registerEventHandlers(V);try{await st.start()}catch(t){a("lsp-service error",t.message)}
